schema {
    query: MyQuery
    mutation: MyMutation
}

"Query for a single todo by id, lastTodo, or all todos"
type MyQuery {
    todo(id: ID!): Todo
    lastTodo: Todo
    todos: [Todo!]!
}

"Mutation to create a Todo, or Update and existing one"
type MyMutation {
    "Create a new Task item"
    createTodo(todo: TodoInput!): Todo!
    "Update existing todo, mark it Done or not Done"
    updateTodo(id: ID!, changes: Map!): Todo
}

"a basic task item"
type Todo {
    id: ID!
    text: String!
    done: Boolean! @hasRole(role: OWNER) # only the owner can see if a todo is done
}

"Passed to createTodo to create a new todo"
input TodoInput {
    "The body text"
    text: String!
    "Is it done already?"
    done: Boolean
}

scalar Map

"Prevents access to a field if the user doesnt have the matching role"
directive @hasRole(role: Role!) on FIELD_DEFINITION
directive @user(id: ID!) on MUTATION | QUERY | FIELD

enum Role {
    ADMIN
    OWNER
}
